{"version":3,"sources":["Components/ContactListItem/ContactListItem.module.scss","Components/ContactForm/ContactForm.js","Components/ContactListItem/ContactListItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","this","onSubmit","type","onChange","required","className","styles","margin","btn","Component","ContactListItem","el","delCont","listItem","onClick","ContactList","contacts","deleteContact","map","contact","key","id","Filter","handleChangeFilter","filter","App","addContact","find","alert","uuidv4","prevState","event","persist","filteredContact","toLowerCase","includes","contactId","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16c40c8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__3jR26\",\"btn\":\"ContactListItem_btn__1jinN\",\"margin\":\"ContactListItem_margin__1juFy\"};","import React, { Component } from \"react\";\r\nimport styles from \"../ContactListItem/ContactListItem.module.scss\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact(this.state.name, this.state.number);\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Number\r\n          <br />\r\n          <input\r\n            className={styles.margin}\r\n            type=\"tel\"\r\n            value={number}\r\n            name=\"number\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <br />\r\n        <button className={styles.btn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport styles from \"./ContactListItem.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactListItem = ({ el, delCont }) => (\r\n  <li className={styles.listItem}>\r\n    {el.name}: {el.number}\r\n    <button className={styles.btn} onClick={delCont}>\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nexport default ContactListItem;\r\n\r\nContactListItem.propTypes = {\r\n  el: PropTypes.object.isRequired,\r\n  delCont: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => (\r\n  <section>\r\n    <ul>\r\n      {contacts.map((contact) => (\r\n        <ContactListItem\r\n          key={contact.id}\r\n          el={contact}\r\n          delCont={() => deleteContact(contact.id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nlet Filter = ({ handleChangeFilter, filter }) => {\r\n  return (\r\n    <section>\r\n      <label>\r\n        Find contacts by name\r\n        <input\r\n          onChange={handleChangeFilter}\r\n          value={filter}\r\n          name=\"filter\"\r\n          type=\"text\"\r\n        />\r\n      </label>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  handleChangeFilter: PropTypes.func,\r\n  filter: PropTypes.string,\r\n};\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n    if (persistedContacts) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  componentWillUnmount() {}\n\n  addContact = (name, number) => {\n    if (this.state.contacts.find((contact) => name === contact.name)) {\n      alert(name + \" is already in contacts\");\n      return;\n    }\n\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.setState((prevState) => {\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n  };\n\n  handleChangeFilter = (event) => {\n    event.persist();\n    this.setState(() => {\n      return { filter: event.target.value };\n    });\n  };\n\n  filteredContact = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState(() => {\n      return {\n        contacts: this.state.contacts.filter(\n          (contact) => contact.id !== contactId\n        ),\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={this.addContact} />\n\n        <h2>Contacts</h2>\n        {this.state.contacts.length > 1 && (\n          <Filter\n            handleChangeFilter={this.handleChangeFilter}\n            filter={this.state.filter}\n          />\n        )}\n        <ContactList\n          contacts={this.filteredContact()}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}